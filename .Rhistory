treatments=cbind(treatments,study)
neoadjuvant_or_adjuvant=clinical[,c(138)]
treatment_class=rowSums(sapply(treatments,as.numeric)-1)
treatment_class
unique(.Last.value)
treatment_class=rowSums(sapply(treatments,as.numeric)-1)+1
treatment_class
fit <- survfit(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ treatment_class ,
data = data.frame(clinical))
fit
View(cbind(clinical$study_ID,treatment_class,treatments))
fit <- survfit(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ clinical$study_ID ,
data = data.frame(clinical))
info=summary(fit_table)
pval=info$logtest[3]
pval=info$sctest[3]
coef=info$coefficients[1]
print(pval)
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,palette =c(2,3,4),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,3,3,3,3),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
treatments=clinical[,c(117:119,124,128,136:137)]
neoadjuvant_or_adjuvant=clinical[,c(138)]
treatment_class=rowSums(sapply(treatments,as.numeric)-1)+1
fit <- survfit(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ treatment_class ,
data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ treatment_class)# tab <- topTable(ebayes, coef=2, adjust="fdr", n=150)
info=summary(fit_table)
pval=info$logtest[3]
coef=info$coefficients[1]
print(pval)
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,3,3,3,3),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
fit
treatments=clinical[,c(117:119,124,128,136:137)]
study=ifelse(as.integer(clinical$study_ID)==22226,1,0)
treatments=cbind(treatments,study)
neoadjuvant_or_adjuvant=clinical[,c(138)]
rowSums(sapply(treatments,as.numeric)-1)
rowSums(sapply(treatments,as.numeric)-1)+1
treatment_class=rowSums(sapply(treatments,as.numeric)-1)+1
fit <- survfit(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ treatment_class ,
data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ treatment_class)# tab <- topTable(ebayes, coef=2, adjust="fdr", n=150)
info=summary(fit_table)
pval=info$sctest[3]
print(pval)
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,3,3,3,3),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"lightgreen",3,3,3),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"lightgreen","seagreen",3,3),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"lightgreen","seagreen","Darkgreen","seagreen4"),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"seagreen","seagreen2","seagreen3","seagreen4"),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"lightgreen","seagreen2","seagreen3","seagreen4"),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"darkolivegreen1","seagreen2","seagreen3","seagreen4"),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"darkolivegreen1","seagreen2","forestgreen","seagreen4"),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"darkolivegreen1","seagreen2","seagreen3","forestgreen"),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(fit,data=clinical,
pval = TRUE,censor.shape="x", censor.size = 3,legend.labs =
c("Tamoxifen","Epirubicin + other", "Doxo + Cyclo","Doxo + Cyclo + Taxa","Doxo + Cyclo + Taxa + Trastu"
,"Doxo + Cyclo + Taxa + Trastu + other"), palette =c(4,2,"darkolivegreen1","seagreen2","seagreen3","lawngreen"),
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
info=summary(fit_table)
pval=info$logtest[3]
info=summary(fit_table)
pval=info$logtest[3]
info
fit0 <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ 1,
data = data.frame(clinical))
print(info)
coef
print(info)
pval=info$logtest[3]
coef=info$coefficients[1]
coef
print(info)
info$coefficients
info$coefficients[2]
info$coefficients[2]*10
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis,
data = data.frame(clinical))
if (pval<0.05){print(HR)}
selected=4
proc_eset <-
processExpressionSetList(exprSetList=list.eset[selected], numTopVarGenes=1000)[[1]]
heatmap(exprs(proc_eset))
df=exprs(proc_eset)
d <- dist(t(df)) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7)
pData(eset)
pData(eset)$OS
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n",col=pData(eset)$OS) + text(x, y, labels = colnames(df), cex=.7)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n",col=pData(eset)$OS) + text(x, y, labels = colnames(df), cex=.7)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n",col=c(pData(eset)$OS)+1) + text(x, y, labels = colnames(df), cex=.7)
cols=pData(eset)$OS)+1
cols=pData(eset)$OS+1
cols
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n",col=cols) + text(x, y, labels = colnames(df), cex=.7)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n",col=cols)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=cols)
View(pData(eset)[which(pData(eset)$patient_ID%in%c(152082,152048,152052)),])
View(pData(eset)[c(which(pData(eset)$patient_ID%in%c(152082,152048,152052)),c(1,2,3)),])
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=pData(eset)$preTrt_numPosLymphNodes)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=pData(eset)$S_phase)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=pData(eset)$relapse)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=pData(eset)$OS)
pData(eset)$OS
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=cols)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=cols)+legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=cols)+legend(legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=cols)+legend(legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(1:10,col=1)
plot(1:10,col=é)
plot(1:10,col=2)
selected=4
proc_eset <-
processExpressionSetList(exprSetList=list.eset[selected], numTopVarGenes=1000)[[1]]
heatmap(exprs(proc_eset))
df=exprs(proc_eset)
d <- dist(t(df)) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
cols=pData(eset)$OS+1
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=cols)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n") + text(x, y, labels = colnames(df), cex=.7,col=cols)
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n"); text(x, y, labels = colnames(df), cex=.7,col=cols)
selected=4
proc_eset <-
processExpressionSetList(exprSetList=list.eset[selected], numTopVarGenes=1000)[[1]]
heatmap(exprs(proc_eset))
df=exprs(proc_eset)
d <- dist(t(df)) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
cols=pData(eset)$OS+1
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n"); text(x, y, labels = colnames(df), cex=.7,col=cols)
selected=4
proc_eset <-
processExpressionSetList(exprSetList=list.eset[selected], numTopVarGenes=1000)[[1]]
heatmap(exprs(proc_eset))
df=exprs(proc_eset)
d <- dist(t(df)) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
cols=pData(eset)$OS+1
plot(x, y, xlab="mds 1", ylab="mds 2",
main="Metric MDS", type="n"); text(x, y, labels = colnames(df), cex=.7,col=cols)
View(fData(eset)$gene_symbol)
pData(eset)
fData(eset)
which(fData(eset)$gene_symbol=="ERBB2IP")
dim(exprs(eset))
subset=colMeans(exprs(eset)[g,])
g=which(fData(eset)$gene_symbol=="ERBB2IP")
subset=colMeans(exprs(eset)[g,])
dim(subset)
dim(subset)
subset
subset
erbb2=ifelse(subset>mean(subset),1,0)
erbb2
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ erbb2 ,                 data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ erbb2)# tab <- topTable(ebayes, coef=2, adjust="fdr", n=150)
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ erbb2 ,                 data = data.frame(clinical))
clinical$clinical.OS_months_or_MIN_months_of_OS
clinical=pData(eset)
clinical=data.frame(clinical$study_ID,
clinical$OS,
clinical$OS_months_or_MIN_months_of_OS,
clinical$RFS,
clinical$RFS_months_or_MIN_months_of_RFS,
clinical$metastasis,
clinical$age,
clinical$ER_preTrt,
clinical$ER_fmolmg_preTrt,
clinical$tumor_size_cm_preTrt_preSurgery,
clinical$tumor_stage_preTrt,
clinical$preTrt_lymph_node_status,
clinical$ERBB2_CPN_amplified,
clinical$Erbeta_preTrt,
clinical$PTEN_mutation,
clinical$PTEN_pos
)
head(clinical)
paste(names(clinical),sapply(clinical, class),sep = " - ")
g=which(fData(eset)$gene_symbol=="ERBB2IP")
subset=colMeans(exprs(eset)[g,])
erbb2=ifelse(subset>mean(subset),1,0)
erbb2
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ erbb2 ,                 data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ erbb2)# tab <- topTable(ebayes, coef=2, adjust="fdr", n=150)
info=summary(fit_table)
print(info)
pval=info$logtest[3]
pval=info$sctest[3]
coef=info$coefficients[1]
HR=info$coefficients[2]*10
print(pval)
if (pval<0.05){print(HR)}
ggsurvplot(list('risk'=fit,'null.model'=fit0),data=clinical,
pval = TRUE,palette =c("steelblue2", "coral2",'Grey'),legend.labs =
c("down group","up group","all patients"),linetype = c(1,1,2),censor.shape="x", censor.size = 3,
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
subset=apply(exprs(eset)[g,],MARGIN = 2,FUN = max)
subset
erbb2=ifelse(subset>mean(subset),1,0)
erbb2
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ erbb2 ,                 data = data.frame(clinical))
info=summary(fit_table)
pval=info$logtest[3]
coef=info$coefficients[1]
HR=info$coefficients[2]*10
print(pval)
ggsurvplot(list('risk'=fit,'null.model'=fit0),data=clinical,
pval = TRUE,palette =c("steelblue2", "coral2",'Grey'),legend.labs =
c("down group","up group","all patients"),linetype = c(1,1,2),censor.shape="x", censor.size = 3,
title = "\tRelapse model for patients with up/down regulated signature ",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
knitr::opts_chunk$set(echo = TRUE)
GEOquery::getGEO('GSE39591')
gse=GEOquery::getGEO('GSE39591')
class(gse)
class(gse$GSE39591_series_matrix.txt.gz)
class(gse)
class(gse$GSE39591_series_matrix.txt.gz)
pData(gse$GSE39591_series_matrix.txt.gz)
head(pData(eset)[c(1:3), c(1:7)])
suppressMessages(library(limma))
suppressMessages(library(Biobase))
suppressMessages(library(limma))
suppressMessages(library(survival))
suppressMessages(library(survminer))
suppressMessages(library("curatedBreastData"))
suppressMessages(library(survivalROC))
suppressMessages(library(tibble))
suppressMessages(library(purrr))
suppressMessages(library(tidyr))
suppressMessages(library(dplyr))
#load up datasets that are in S4 expressionSet format.
#clinical data from master clinicalTable already linked to each sample
#in these ExpressionSets in the phenoData slot.
data(curatedBreastDataExprSetList)
data(clinicalData)
class(gse)
class(gse$GSE39591_series_matrix.txt.gz)
pData(gse$GSE39591_series_matrix.txt.gz)
class(gse$GSE39591_series_matrix.txt.gz)
pData(gse$GSE39591_series_matrix.txt.gz)
fData(gse$GSE39591_series_matrix.txt.gz)
gse=GEOquery::getGEO('GSE39591')
setwd("/media/Storage_HDD/C3M/Enseignements/stats")
0.25 * nrow(clinical)^(-0.20)
selected=4
proc_eset <-
processExpressionSetList(exprSetList=list.eset[selected], numTopVarGenes=1000)[[1]]
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(Biobase))
suppressMessages(library(limma))
suppressMessages(library(survival))
suppressMessages(library(survminer))
suppressMessages(library("curatedBreastData"))
suppressMessages(library(survivalROC))
suppressMessages(library(tibble))
suppressMessages(library(purrr))
suppressMessages(library(tidyr))
suppressMessages(library(dplyr))
#load up datasets that are in S4 expressionSet format.
#clinical data from master clinicalTable already linked to each sample
#in these ExpressionSets in the phenoData slot.
data(curatedBreastDataExprSetList)
data(clinicalData)
#renaming for easier handling
list.eset=curatedBreastDataExprSetList
# How big is loaded object
length(list.eset)
# what's inside ?
head(names(list.eset))
clinical=pData(eset)
# lets look inside one object
eset=list.eset[[4]]
class(eset)
class(eset@assayData$exprs)
# or via methods of ExpressionSet objects (Biobase)
# class(exprs(eset))
head(exprs(eset))[,c(1:5)]
clinical=pData(eset)
clinical=data.frame(clinical$study_ID,
clinical$OS,
clinical$OS_months_or_MIN_months_of_OS,
clinical$RFS,
clinical$RFS_months_or_MIN_months_of_RFS,
clinical$metastasis,
clinical$age,
clinical$ER_preTrt,
clinical$ER_fmolmg_preTrt,
clinical$tumor_size_cm_preTrt_preSurgery,
clinical$tumor_stage_preTrt,
clinical$preTrt_lymph_node_status,
clinical$ERBB2_CPN_amplified,
clinical$Erbeta_preTrt,
clinical$PTEN_mutation,
clinical$PTEN_pos
)
head(clinical)
paste(names(clinical),sapply(clinical, class),sep = " - ")
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.DFS,
data = data.frame(clinical))
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.tumor_stage_preTrt,
data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.tumor_stage_preTrt)
info=summary(fit_table)
clinicalData  print(info)
print(info)
clinical$clinical.tumor_stage_preTrtT2
clinical$clinical.tumor_stage_preTrt
fit
ggsurvplot(list('risk'=fit,'null.model'=fit0),data=clinical,
pval = TRUE,palette =c("steelblue2", "coral2",'Grey'),legend.labs =
c("No metastasis\ngroup","Metastasis\ngroup","all patients"),
linetype = c(1,1,2),censor.shape="x", censor.size = 3,
title = "\tSurvival model - Metastasis",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
fit0 <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ 1,
data = data.frame(clinical))
ggsurvplot(list('risk'=fit,'null.model'=fit0),data=clinical,
pval = TRUE,palette =c("steelblue2", "coral2",'Grey'),legend.labs =
c("No metastasis\ngroup","Metastasis\ngroup","all patients"),
linetype = c(1,1,2),censor.shape="x", censor.size = 3,
title = "\tSurvival model - Metastasis",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
ggsurvplot(list('risk'=fit,'null.model'=fit0),data=clinical,
pval = TRUE,palette =c("steelblue2", "coral2",'Grey'),legend.labs =
c("No metastasis\ngroup","Metastasis\ngroup","all patients"),
linetype = c(1,1,2),censor.shape="x", censor.size = 3,
title = "\tSurvival model - Metastasis",xlab = "Time in Days",
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
fit
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.tumor_stage_preTrt,
data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.tumor_stage_preTrt)
info=summary(fit_table)
print(info)
pval=info$sctest[3]
coef=info$coefficients[1]
HR=info$coefficients[2]*10
print(pval)
if (pval<0.05){print(HR)}
ggsurvplot(list('risk'=fit,'null.model'=fit0),data=clinical,
pval = TRUE,palette =c("steelblue2", "coral2",'Grey'),legend.labs =
c("T1\ngroup","T2\ngroup","all patients"),
linetype = c(1,1,2),censor.shape="x", censor.size = 3,
title = "\tSurvival model - Metastasis",xlab = "Time in Days",
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"), xlim = c(0, 145) )
(3348 + 2404) / 16727
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ ??? ,
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ '???' ,
data = data.frame(clinical))
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis+ (clinical$clinical.age>50) ,
data = data.frame(clinical))
fit
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis* (clinical$clinical.age>50) ,
data = data.frame(clinical))
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis+ (clinical$clinical.age>50) ,
data = data.frame(clinical))
fit
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis, (clinical$clinical.age>50) ,
data = data.frame(clinical))
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis+ (clinical$clinical.age>50) ,
data = data.frame(clinical))
fit
info=summary(fit_table)
pval=info$sctest[3]
print(info)
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis+ (clinical$clinical.age>50) ,
data = data.frame(clinical))
print(fit)
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~  clinical$clinical.metastasis * (clinical$clinical.age>50),
info=summary(fit_table)
print(info)
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ (clinical$clinical.age>50))
info=summary(fit_table)
print(info)
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis+
(clinical$clinical.age>50))
info=summary(fit_table)
print(info)
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis*
(clinical$clinical.age>50))
info=summary(fit_table)
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.metastasis *
(clinical$clinical.age>50))
info=summary(fit_table)
print(info)
fit <- survfit(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.tumor_size_cm_preTrt_preSurgery+ (clinical$clinical.age>50) ,
data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$clinical.OS_months_or_MIN_months_of_OS,clinical$clinical.OS) ~ clinical$clinical.tumor_size_cm_preTrt_preSurgery *
(clinical$clinical.age>50))
info=summary(fit_table)
print(info)
if (pval<0.05){print(HR)}
print(pval)
ggsurvplot(list('risk'=fit,'null.model'=fit0),data=clinical,
pval = TRUE,palette =c("steelblue2", "coral2",'Grey'),legend.labs =
c("<50 yrs old\ngroup","> 50 yrs old\ngroup","all patients"),
linetype = c(1,1,2),censor.shape="x", censor.size = 3,
title = "\tSurvival model - Age",xlab = "Time in Days",pval.method =   TRUE,
ggtheme = theme_bw(), ncensor.plot = F, combine = T,surv.scale=c("percent"),xlim = c(0, 145) )
studies=c("6577","16446","22226")
clinical=clinicalData$clinicalTable[which(clinicalData$clinicalTable$study_ID%in%studies),]
fit <- survfit(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ clinical$study_ID + clinical$age ,
data = data.frame(clinical))
fit_table <- coxph(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ clinical$study_ID*clinical$age )
info=summary(fit_table)
print(info)
fit_table <- coxph(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ clinical$study_ID )
info=summary(fit_table)
info
fit_table <- coxph(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ clinical$study_ID + (clinical$age>50))
info=summary(fit_table)
print(info)
fit_table <- coxph(Surv(clinical$OS_months_or_MIN_months_of_OS,clinical$OS) ~ clinical$study_ID *(clinical$age>50))
info=summary(fit_table)
print(info)
